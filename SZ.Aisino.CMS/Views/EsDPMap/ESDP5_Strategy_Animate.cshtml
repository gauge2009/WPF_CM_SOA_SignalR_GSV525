
@{
    ViewBag.Title = "ESDP5_Strategy_Animate";
}




@section styles{


    <style>
         
    </style>



}




<h2>ESDP5_Strategy </h2>
<div class="panel panel-default">
    <div class="panel-heading">
        <div class="btn-group">
            <h2> ESDP5_Strategy_Animate  </h2>
        </div>
    </div>
    <div class="panel-body">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="col-lg-3 col-md-3 col-sm-3">


            </div>

        </div>
    </div>
   

    <div class="panel-footer">
        <select id="ddlStrategy">
            <option value="linear">linear</option>
            <option value="easeIn">easeIn</option>
            <option value="strongEaseIn">strongEaseIn</option>
            <option value="strongEaseOut">strongEaseOut</option>
            <option value="strongEaseOut">sineaseIn</option>
            <option value="strongEaseOut">sineaseOut</option>
        </select>
         <input name="invoke" type="button" class="btn btn-primary input-sm" value="invoke" />
    </div>
</div>

<div style="position:absolute;background:green;color:white;padding:15px;" id="div">锦囊藏略，适时变策</div>



@section scripts{
    <script type="text/javascript">
        /// 2 略（js对象）
        var tween = {
            ///3 策（成员）
            linear: function (t, b, c, d) {
                return c * t / d + b;
            },
            easeIn: function (t, b, c, d) {
                return c * (t /= d) * t + b;
            },
            strongEaseIn: function (t, b, c, d) {
                return c * (t /= d) * t * t * t * t + b;
            },
            strongEaseOut: function (t, b, c, d) {
                return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
            },
            sineaseIn: function (t, b, c, d) {
                return c * (t /= d) * t * t + b;
            },
            sineaseOut: function (t, b, c, d) {
                return c * ((t = t / d - 1) * t * t + 1) + b;
            }
        };
</script>

<script type="text/javascript">

        /// 1 锦囊
        var Animate = function (dom) {
            this.dom = dom; // 进行运动的dom 节点
            this.startTime = 0; // 动画开始时间
            this.startPos = 0; // 动画开始时，dom 节点的位置，即dom 的初始位置
            this.endPos = 0; // 动画结束时，dom 节点的位置，即dom 的目标位置
            this.propertyName = null; // dom 节点需要被改变的css 属性名
            /// 2 略
            this.easing = null; // 缓动算法
            this.duration = null; // 动画持续时间
        };


        Animate.prototype.start = function (propertyName, endPos, duration, easing) {
            this.startTime = +new Date; // 动画启动时间
            this.startPos = this.dom.getBoundingClientRect()[propertyName]; // dom 节点初始位置
            this.propertyName = propertyName; // dom 节点需要被改变的CSS 属性名
            this.endPos = endPos; // dom 节点目标位置
            this.duration = duration; // 动画持续事件
            this.easing = tween[easing]; // 缓动算法
            var self = this;
            var timeId = setInterval(function () { // 启动定时器，开始执行动画
                if (self.step() === false) { // 如果动画已结束，则清除定时器
                    clearInterval(timeId);
                    self.reset();
                }
            }, 19);
        };

        Animate.prototype.step = function () {
            var t = +new Date; // 取得当前时间
            if (t >= this.startTime + this.duration) { // (1)
                this.update(this.endPos); // 更新小球的CSS 属性值
                return false;
            }
            var pos = this.easing(t - this.startTime, this.startPos, this.endPos - this.startPos, this.duration);
            // pos 为小球当前位置
            this.update(pos); // 更新小球的CSS 属性值
        };

        Animate.prototype.update = function (pos) {
            this.dom.style[this.propertyName] = pos + 'px';
        };
        Animate.prototype.reset = function (pos) {
            this.dom.style[this.propertyName] = '0px';
        };


</script>

<script type="text/javascript">
        /// 4 配置与消费锦囊
    var strategyHelper = {};
        (function (o) {
            o.div = null;
            o.animate = null;
            o.Init = function () {
                o.div = document.getElementById('div');
                o.animate = new Animate(div);
                $("input[name='invoke']").click("click", o.OpenWindows);
            };
            o.OpenWindows = function (event) {
                event.preventDefault();
                var eventTarget = $(event.target).get(0);
                switch (eventTarget.name) {
                    case "invoke":
                        o.invoke(event);
                        break;
                }
            };
            o.invoke = function () {
                var stretageName = $("#ddlStrategy").val();
                //$("#ddlStrategy  option:selected").text();
                o.animate.start('left', 500, 1000, stretageName);
                // animate.start( 'top', 1500, 500, 'strongEaseIn' );
            }
        })(strategyHelper);
        $(function (e) {
            strategyHelper.Init();
        });


</script>

}



